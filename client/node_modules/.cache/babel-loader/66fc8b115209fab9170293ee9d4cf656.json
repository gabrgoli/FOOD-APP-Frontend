{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Pictures\\\\Screenshots\\\\HENRY\\\\PI\\\\PI-Food (ultima Version)\\\\client\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRecipes, filterCreated, getDiets, filteredByDiet, orderByTitle, orderBySpoonacularScore } from '../actions';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Paginado from './Paginado';\nimport SearchBar from './SearchBar'; //import styles from \"../styles/Paginado.module.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(State => State.recipes); //me trae del reducer el estado de recipes, que tiene todas las recetas\n\n  const allDiets = useSelector(State => State.diets); //PAGINADO\n\n  const [currentPage, setCurrentPage] = useState(1); //creo un estado local en donde le paso la pagina actual\n\n  const [recipesPerPage, setRecipesPerPage] = useState(9); //cantidad de recetas por pagina\n\n  const indexOfLastRecipe = currentPage * recipesPerPage; //porque si estoy en la pagina 3, el ultimo recipe va a ser 6*3=18\n\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage; //da el index de la primera receta\n\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe); //va mostrando cuantos recipes hay que rednerizar por pagina\n  // estados locales para renderizar los globales\n\n  const [aux, forzarRenderizado] = useState(\"\"); //estado local que arranca vacio\n\n  const [score, setScore] = useState(\"\");\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    dispatch(getRecipes());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getDiets());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getRecipes());\n  }\n\n  function handleFilterCreated(e) {\n    dispatch(filterCreated(e.target.value));\n  }\n\n  function handleFilteredDiet(e) {\n    dispatch(filteredByDiet(e.target.value));\n    setCurrentPage(1);\n    e.preventDefault();\n  }\n\n  function handleSortedRecipesSpoonScore(e) {\n    dispatch(orderBySpoonacularScore(e.target.value));\n    setCurrentPage(1);\n    setScore(e.target.value);\n    e.preventDefault();\n  }\n\n  function handleSortedRecipesTitle(e) {\n    e.preventDefault();\n    dispatch(orderByTitle(e.target.value));\n    setCurrentPage(1); //setea la pagina principal\n\n    forzarRenderizado(e.target.value); //renderiza modificando el estado local, ordenado de tal forma, solo hace la modificacion en el renderizado\n    //setorder('Ordenado ${e.target.value}')\n    //guarda el valor d el criterio actual, max min o all, y verifica si hubo un cambio de valor y compara con el estado actual, si es diferente renderiza\n  }\n\n  if (currentRecipes.length === 0) {\n    alert(\"no encontro receta\");\n  }\n\n  return (\n    /*#__PURE__*/\n    //se pasan los values iguales a la API\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/recipe\",\n        children: \"Crear Receta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"aguante las recetas loco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"volver a cargar las recetas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleSortedRecipesTitle(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Ascendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            vale: \"desc\",\n            children: \"Descendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleSortedRecipesSpoonScore(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SpoonacularMax\",\n            children: \"Max Spoonacular Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SpoonacularMin\",\n            children: \"Min Spoonacular Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleFilterCreated(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"created\",\n            children: \"Creados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"Existente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleFilteredDiet(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"Seleccionar Dietas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), allDiets === null || allDiets === void 0 ? void 0 : allDiets.map(diet => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: diet.name,\n              children: diet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 34\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n          recipesPerPage: recipesPerPage,\n          allRecipes: allRecipes.length,\n          paginado: paginado\n        }, paginado, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: currentRecipes === null || currentRecipes === void 0 ? void 0 : currentRecipes.map(recipe => {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: '/recipe/' + recipe.id,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                image: recipe.imagen,\n                title: recipe.title,\n                diets: recipe.dieta.map(r => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: r.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 103\n                }, this)),\n                score: recipe.puntuacion\n              }, recipe.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Paginado, {\n            recipesPerPage: recipesPerPage,\n            allRecipes: allRecipes.length,\n            paginado: paginado\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Home, \"PGCUR8DTvukl65XbvHdixdUSurQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/PC/Pictures/Screenshots/HENRY/PI/PI-Food (ultima Version)/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getRecipes","filterCreated","getDiets","filteredByDiet","orderByTitle","orderBySpoonacularScore","Link","Card","Paginado","SearchBar","Home","dispatch","allRecipes","State","recipes","allDiets","diets","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","aux","forzarRenderizado","score","setScore","paginado","pageNumber","handleClick","e","preventDefault","handleFilterCreated","target","value","handleFilteredDiet","handleSortedRecipesSpoonScore","handleSortedRecipesTitle","length","alert","map","diet","name","recipe","id","imagen","title","dieta","r","puntuacion"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getRecipes,filterCreated,getDiets ,filteredByDiet, orderByTitle,orderBySpoonacularScore} from '../actions';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport Paginado from './Paginado';\nimport SearchBar from './SearchBar';\n//import styles from \"../styles/Paginado.module.css\"\n\nexport default function Home(){\n\n    const dispatch = useDispatch()\n    const allRecipes = useSelector((State)=> State.recipes) //me trae del reducer el estado de recipes, que tiene todas las recetas\n    const allDiets = useSelector((State) => State.diets)\n\n    //PAGINADO\n    const [currentPage,setCurrentPage]=useState(1) //creo un estado local en donde le paso la pagina actual\n    const [recipesPerPage, setRecipesPerPage]=useState(9) //cantidad de recetas por pagina\n    const indexOfLastRecipe = currentPage * recipesPerPage //porque si estoy en la pagina 3, el ultimo recipe va a ser 6*3=18\n    const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage //da el index de la primera receta\n    const currentRecipes = allRecipes.slice(indexOfFirstRecipe,indexOfLastRecipe) //va mostrando cuantos recipes hay que rednerizar por pagina\n\n\n        // estados locales para renderizar los globales\n        const [aux,forzarRenderizado] = useState(\"\") //estado local que arranca vacio\n        const [score,setScore] = useState(\"\")\n\n    const paginado = (pageNumber)=> {\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect(()=>{\n        dispatch(getRecipes());\n    },[dispatch])\n\n    useEffect(() => {\n        dispatch(getDiets())\n    },[dispatch])\n\n    function handleClick(e){\n        e.preventDefault();\n        dispatch(getRecipes());\n    }\n\n\n    function handleFilterCreated(e){\n        dispatch(filterCreated(e.target.value))\n    }\n\n    function handleFilteredDiet(e){\n        dispatch(filteredByDiet(e.target.value))\n        setCurrentPage(1)\n        e.preventDefault()\n    }\n\n    function handleSortedRecipesSpoonScore(e){\n        dispatch(orderBySpoonacularScore(e.target.value))\n        setCurrentPage(1)\n        setScore(e.target.value)\n        e.preventDefault()\n    }\n\n    function handleSortedRecipesTitle(e){\n        e.preventDefault();\n        dispatch(orderByTitle(e.target.value))\n        setCurrentPage(1);//setea la pagina principal\n        forzarRenderizado(e.target.value) //renderiza modificando el estado local, ordenado de tal forma, solo hace la modificacion en el renderizado\n        //setorder('Ordenado ${e.target.value}')\n\n        //guarda el valor d el criterio actual, max min o all, y verifica si hubo un cambio de valor y compara con el estado actual, si es diferente renderiza\n    }\n    if(currentRecipes.length===0){alert(\"no encontro receta\")}\n\n    return(//se pasan los values iguales a la API\n        <div>\n            <Link to = '/recipe'>Crear Receta</Link>\n            <h1>aguante las recetas loco</h1>\n\n            <button onClick={e=>{handleClick(e)}}>\n                volver a cargar las recetas\n            </button>\n\n            <div>\n                <select onChange={(e) => handleSortedRecipesTitle(e)}>\n                    <option value=\"\" >Select Order</option>\n                    <option value='asc'>Ascendente</option> \n                    <option vale='desc'>Descendente</option>\n                </select>\n                <select onChange={e=>handleSortedRecipesSpoonScore(e)}>\n                    <option value=\"\" >Select Score</option>\n                    <option value=\"SpoonacularMax\">Max Spoonacular Score</option>\n                    <option value=\"SpoonacularMin\">Min Spoonacular Score</option>\n                </select>  \n                <select onChange={e=>handleFilterCreated(e)}>\n                    <option value='All'>Todos</option>\n                    <option value='created'>Creados</option>\n                    <option value='api'>Existente</option>\n                </select>\n                <select  onChange={e => handleFilteredDiet(e)}>\n                    <option value=\"all\">Seleccionar Dietas</option>\n                    {allDiets?.map(diet => {\n                        return ( <option value={diet.name}>{diet.name}</option>)\n                    })\n                }\n                </select>\n\n\n                <Paginado\n                key={paginado}\n                recipesPerPage={recipesPerPage}\n                allRecipes={allRecipes.length}\n                paginado = {paginado}\n                />\n\n                <SearchBar\n                />\n\n                <div >\n          \n                {\n                \n                currentRecipes?.map(recipe => {\n                    return (\n                        <Link to = {'/recipe/'+recipe.id}>\n                        <Card image={recipe.imagen} title={recipe.title} diets={recipe.dieta.map(r => <p>{r.name}</p>)} key={recipe.id} score={recipe.puntuacion} ></Card>\n                        </Link>\n                        )\n                    })\n                \n}\n                </div>\n\n                <div  >\n                <Paginado recipesPerPage={recipesPerPage} allRecipes={allRecipes.length} paginado={paginado}></Paginado>\n                </div>  \n            </div>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}