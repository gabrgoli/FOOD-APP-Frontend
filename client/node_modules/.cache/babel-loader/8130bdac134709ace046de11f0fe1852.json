{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mi PC\\\\Desktop\\\\Food Recetas\\\\Food_Recipes\\\\client\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRecipes, filterCreated, getDiets, filteredByDiet, orderByTitle, orderBySpoonacularScore } from '../actions';\nimport { Link } from 'react-router-dom';\nimport CardRecipe from './CardRecipe2';\nimport Paginado from './Paginado';\nimport SearchBar from './SearchBar';\nimport { Grid, CardMedia, Box, Typography, Divider } from '@mui/material';\nimport '../styles/Buttons.css';\nimport NavBar from '../components/NavBar'; //import styles from \"../styles/Paginado.module.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('url de ahora', window.location);\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allRecipes = useSelector(State => State.recipes); //me trae del reducer el estado de recipes, que tiene todas las recetas\n\n  const allDiets = useSelector(State => State.diets); //PAGINADO\n\n  const [currentPage, setCurrentPage] = useState(1); //creo un estado local en donde le paso la pagina actual\n\n  const [recipesPerPage, setRecipesPerPage] = useState(28); //cantidad de recetas por pagina\n\n  const indexOfLastRecipe = currentPage * recipesPerPage; //porque si estoy en la pagina 3, el ultimo recipe va a ser 6*3=18\n\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage; //da el index de la primera receta\n\n  const currentRecipes = allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe); //va mostrando cuantos recipes hay que rednerizar por pagina\n  // estados locales para renderizar los globales\n\n  const [aux, forzarRenderizado] = useState(\"\"); //estado local que arranca vacio\n\n  const [score, setScore] = useState(\"\");\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    allRecipes.length === 0 && dispatch(getRecipes());\n    console.log(\"se hizo el dispatch\");\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getDiets());\n  }, [dispatch]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getRecipes());\n  }\n\n  function handleFilterCreated(e) {\n    dispatch(filterCreated(e.target.value));\n  }\n\n  function handleFilteredDiet(e) {\n    dispatch(filteredByDiet(e.target.value));\n    setCurrentPage(1);\n    e.preventDefault();\n  }\n\n  function handleSortedRecipesSpoonScore(e) {\n    dispatch(orderBySpoonacularScore(e.target.value));\n    setCurrentPage(1);\n    setScore(e.target.value);\n    e.preventDefault();\n  }\n\n  function handleSortedRecipesTitle(e) {\n    e.preventDefault();\n    dispatch(orderByTitle(e.target.value));\n    setCurrentPage(1); //setea la pagina principal\n\n    forzarRenderizado(e.target.value); //renderiza modificando el estado local, ordenado de tal forma, solo hace la modificacion en el renderizado\n    //setorder('Ordenado ${e.target.value}')\n    //guarda el valor d el criterio actual, max min o all, y verifica si hubo un cambio de valor y compara con el estado actual, si es diferente renderiza\n  }\n\n  return (\n    /*#__PURE__*/\n    //se pasan los values iguales a la API\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginTop: \"250px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        marginTop: \"400px\",\n        contentEditable: true,\n        \"data-heading\": \"Piece of Cake\",\n        children: \"Busca tu receta favorita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botoninicio\",\n        onClick: e => {\n          handleClick(e);\n        },\n        children: \"Recargar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-css\",\n          onChange: e => handleSortedRecipesTitle(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Ordenar Alfab\\xE9ticamente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Ascendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            vale: \"desc\",\n            children: \"Descendente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-css\",\n          onChange: e => handleSortedRecipesSpoonScore(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Ordenar por Puntaje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SpoonacularMax\",\n            children: \"M\\xE1ximo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SpoonacularMin\",\n            children: \"M\\xEDnimo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-css\",\n          onChange: e => handleFilterCreated(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Ver Todas las Recetas o solo las creadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"created\",\n            children: \"Recetas Creaas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"Todas las Recetas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-css\",\n          onChange: e => handleFilteredDiet(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"Filtrar por tipo de dieta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), allDiets === null || allDiets === void 0 ? void 0 : allDiets.map(diet => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: diet.name,\n              children: diet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 34\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n          recipesPerPage: recipesPerPage,\n          allRecipes: allRecipes.length,\n          paginado: paginado,\n          currentPage: currentPage\n        }, paginado, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(currentRecipes), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            sx: {\n              display: {\n                md: 'flex'\n              },\n              justifyContent: {\n                xs: 'space-around',\n                md: 'flex-start'\n              },\n              mt: 2\n            },\n            children: currentRecipes === null || currentRecipes === void 0 ? void 0 : currentRecipes.map(recipe => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                md: 3,\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardRecipe, {\n                  recipe: recipe,\n                  diets: recipe.dieta,\n                  recipeId: recipe.id\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this)\n              }, recipe._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Paginado, {\n            recipesPerPage: recipesPerPage,\n            allRecipes: allRecipes.length,\n            paginado: paginado,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Home, \"WhQWztGssjAd6QdvMs/RHrLc64E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Mi PC/Desktop/Food Recetas/Food_Recipes/client/src/components/Home.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getRecipes","filterCreated","getDiets","filteredByDiet","orderByTitle","orderBySpoonacularScore","Link","CardRecipe","Paginado","SearchBar","Grid","CardMedia","Box","Typography","Divider","NavBar","console","log","window","location","Home","dispatch","allRecipes","State","recipes","allDiets","diets","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","aux","forzarRenderizado","score","setScore","paginado","pageNumber","length","handleClick","e","preventDefault","handleFilterCreated","target","value","handleFilteredDiet","handleSortedRecipesSpoonScore","handleSortedRecipesTitle","map","diet","name","display","md","justifyContent","xs","mt","recipe","dieta","id","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { getRecipes,filterCreated,getDiets ,filteredByDiet, orderByTitle,orderBySpoonacularScore} from '../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport CardRecipe from './CardRecipe2';\r\nimport Paginado from './Paginado';\r\nimport SearchBar from './SearchBar';\r\nimport { Grid,CardMedia, Box, Typography, Divider } from '@mui/material'\r\nimport '../styles/Buttons.css';\r\nimport NavBar from '../components/NavBar'\r\n\r\n//import styles from \"../styles/Paginado.module.css\"\r\nconsole.log('url de ahora' ,window.location)\r\nexport default function Home(){\r\n\r\n    const dispatch = useDispatch()\r\n    const allRecipes = useSelector((State)=> State.recipes) //me trae del reducer el estado de recipes, que tiene todas las recetas\r\n    const allDiets = useSelector((State) => State.diets)\r\n\r\n    //PAGINADO\r\n    const [currentPage,setCurrentPage]=useState(1) //creo un estado local en donde le paso la pagina actual\r\n    const [recipesPerPage, setRecipesPerPage]=useState(28) //cantidad de recetas por pagina\r\n    const indexOfLastRecipe = currentPage * recipesPerPage //porque si estoy en la pagina 3, el ultimo recipe va a ser 6*3=18\r\n    const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage //da el index de la primera receta\r\n    const currentRecipes = allRecipes.slice(indexOfFirstRecipe,indexOfLastRecipe) //va mostrando cuantos recipes hay que rednerizar por pagina\r\n\r\n\r\n        // estados locales para renderizar los globales\r\n        const [aux,forzarRenderizado] = useState(\"\") //estado local que arranca vacio\r\n        const [score,setScore] = useState(\"\")\r\n\r\n    const paginado = (pageNumber)=> {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (allRecipes.length===0)&&dispatch(getRecipes());\r\n        console.log(\"se hizo el dispatch\")\r\n    },[dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getDiets())\r\n    },[dispatch])\r\n\r\n    function handleClick(e){\r\n        e.preventDefault();\r\n        dispatch(getRecipes());\r\n    }\r\n\r\n\r\n    function handleFilterCreated(e){\r\n        dispatch(filterCreated(e.target.value))\r\n    }\r\n\r\n    function handleFilteredDiet(e){\r\n        dispatch(filteredByDiet(e.target.value))\r\n        setCurrentPage(1)\r\n        e.preventDefault()\r\n    }\r\n\r\n    function handleSortedRecipesSpoonScore(e){\r\n        dispatch(orderBySpoonacularScore(e.target.value))\r\n        setCurrentPage(1)\r\n        setScore(e.target.value)\r\n        e.preventDefault()\r\n    }\r\n\r\n    function handleSortedRecipesTitle(e){\r\n        e.preventDefault();\r\n        dispatch(orderByTitle(e.target.value))\r\n        setCurrentPage(1);//setea la pagina principal\r\n        forzarRenderizado(e.target.value) //renderiza modificando el estado local, ordenado de tal forma, solo hace la modificacion en el renderizado\r\n        //setorder('Ordenado ${e.target.value}')\r\n\r\n        //guarda el valor d el criterio actual, max min o all, y verifica si hubo un cambio de valor y compara con el estado actual, si es diferente renderiza\r\n    }\r\n\r\n    return(//se pasan los values iguales a la API\r\n        <div>\r\n            <NavBar />\r\n            <Box marginTop='250px'/>\r\n            <h1 marginTop='400px' contentEditable data-heading=\"Piece of Cake\">Busca tu receta favorita</h1>\r\n            \r\n            <button  className='botoninicio' onClick={e=>{handleClick(e)}}>\r\n                Recargar\r\n            </button>\r\n\r\n            \r\n\r\n            <div>\r\n                <select className=\"select-css\" onChange={(e) => handleSortedRecipesTitle(e)}>\r\n                    <option value=\"\" >Ordenar Alfabéticamente</option>\r\n                    <option value='asc'>Ascendente</option> \r\n                    <option vale='desc'>Descendente</option>\r\n                </select>\r\n                <select className=\"select-css\" onChange={e=>handleSortedRecipesSpoonScore(e)}>\r\n                    <option value=\"\" >Ordenar por Puntaje</option>\r\n                    <option value=\"SpoonacularMax\">Máximo</option>\r\n                    <option value=\"SpoonacularMin\">Mínimo</option>\r\n                </select>  \r\n                <select className=\"select-css\" onChange={e=>handleFilterCreated(e)}>\r\n                    <option value='All'>Ver Todas las Recetas o solo las creadas</option>\r\n                    <option value='created'>Recetas Creaas</option>\r\n                    <option value='api'>Todas las Recetas</option>\r\n                </select>\r\n                <select className=\"select-css\"  onChange={e => handleFilteredDiet(e)}>\r\n                    <option value=\"all\">Filtrar por tipo de dieta</option>\r\n                    {allDiets?.map(diet => {\r\n                        return ( <option value={diet.name}>{diet.name}</option>)\r\n                    })\r\n                }\r\n                </select>\r\n\r\n\r\n                    <Paginado\r\n                    key={paginado}\r\n                    recipesPerPage={recipesPerPage}\r\n                    allRecipes={allRecipes.length}\r\n                    paginado = {paginado}\r\n                    currentPage={currentPage}\r\n                    />\r\n\r\n                <div >\r\n                {console.log(currentRecipes)}\r\n\r\n                <Grid container   sx={{display:{md:'flex'},justifyContent:{xs:'space-around',md:'flex-start'},mt:2}}> \r\n                {\r\n                currentRecipes?.map(recipe => {\r\n                    return (\r\n     \r\n                        <Grid key={recipe._id} md={3} sx={{display:'flex',justifyContent:'center'}}>          \r\n                                <CardRecipe key={recipe.id} recipe={recipe}  diets={recipe.dieta}  recipeId={recipe.id}></CardRecipe>\r\n                        </Grid>\r\n      \r\n                        )\r\n                    })\r\n                }\r\n                </Grid>\r\n                \r\n                </div>\r\n             \r\n                    <div  >\r\n                        <Paginado recipesPerPage={recipesPerPage} allRecipes={allRecipes.length} paginado={paginado} currentPage={currentPage}></Paginado>\r\n                    </div>  \r\n             \r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}