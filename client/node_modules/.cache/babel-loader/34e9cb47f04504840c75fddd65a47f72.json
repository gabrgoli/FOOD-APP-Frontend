{"ast":null,"code":"const initialState = {\n  recipes: [],\n  allRecipes: [],\n  typeOfDiets: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_RECIPES\":\n      return { ...state,\n        recipes: action.payload,\n        allRecipes: action.payload //llena 2 estados con todos los personajes\n\n      };\n\n    case \"FILTER_CREATED\":\n      //muestra los creados por mi o los existentes en la base de datos\n      const createdFilter = action.payload === \"created\" ? state.allRecipes.filter(el => el.createdInDb) : state.allRecipes.filter(el => !el.createdInDb);\n      return { ...state,\n        recipes: action.payload === \"All\" ? state.allRecipes : createdFilter\n      };\n\n    case \"FILTERED_BY_DIETS\":\n      const allRecipes = state.allRecipes;\n      const dietFiltered = action.payload === \"all\" ? allRecipes : allRecipes.filter(el => el.dieta.includes(action.apyload) || el.dieta.map(e => e.name).includes(action.payload)\n      /*\n       let diet = recipe.diets.map((d) => d.name);\n       if (diet.includes(action.payload)) {\n         return allRecipes;\n       }*/\n      );\n      return { ...state,\n        recipes: dietFiltered\n      };\n\n    case \"SEARCH_RECIPE\":\n      return { ...state,\n        recipes: action.payload\n      };\n\n    case \"POST_RECIPE\":\n      return { ...state\n      };\n\n    case \"ORDER_BY_SPOONACULAR_SCORE\":\n      const sortedRecipesSpoonScore = action.payload === \"SpoonacularMax\" ? state.allRecipes.sort(function (a, b) {\n        if (a.puntuacion < b.puntuacion) {\n          return 1;\n        }\n\n        if (b.puntuacion < a.puntuacion) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.allRecipes.sort(function (a, b) {\n        if (a.puntuacion < b.puntuacion) {\n          return -1;\n        }\n\n        if (b.puntuacion < a.puntuacion) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        allRecipes: sortedRecipesSpoonScore\n      };\n\n    case \"GET_DIETS_TYPES\":\n      return { ...state,\n        diets: action.payload //allRecipes: action.payload,\n\n      };\n\n    case \"GET_DETAIL\":\n      return { ...state,\n        detail: action.payload\n      };\n\n    case \"ORDER_BY_TITLE\":\n      const sortedRecipesTitle = action.payload === \"asc\" ? state.allRecipes.sort(function (a, b) {\n        if (a.title.toLowerCase() > b.title.toLowerCase()) {\n          return 1;\n        }\n\n        if (b.title.toLowerCase() > a.title.toLowerCase()) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.allRecipes.sort(function (a, b) {\n        if (a.title.toLowerCase() > b.title.toLowerCase()) {\n          return -1;\n        }\n\n        if (b.title.toLowerCase() > a.title.toLowerCase()) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        allRecipes: sortedRecipesTitle\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n/*case \"FILTER_BY_STATUS\":\n  const allRecipes = state.allRecipes;\n  const statusFiltered =\n    action.payload === \"All\"\n      ? allRecipes\n      : allRecipes.filter((el) => el.status === action.payload);\n  return {\n    ...state,\n    recipes: statusFiltered, //solo modifica este estado\n  };*/","map":{"version":3,"sources":["C:/Users/PC/Desktop/food (ultima Version)/client/src/reducer/index.js"],"names":["initialState","recipes","allRecipes","typeOfDiets","rootReducer","state","action","type","payload","createdFilter","filter","el","createdInDb","dietFiltered","dieta","includes","apyload","map","e","name","sortedRecipesSpoonScore","sort","a","b","puntuacion","diets","detail","sortedRecipesTitle","title","toLowerCase"],"mappings":"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","sourcesContent":["const initialState = {\n  recipes: [],\n  allRecipes: [],\n  typeOfDiets: [],\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"GET_RECIPES\":\n      return {\n        ...state,\n        recipes: action.payload,\n        allRecipes: action.payload, //llena 2 estados con todos los personajes\n      };\n\n    case \"FILTER_CREATED\": //muestra los creados por mi o los existentes en la base de datos\n      const createdFilter =\n        action.payload === \"created\"\n          ? state.allRecipes.filter((el) => el.createdInDb)\n          : state.allRecipes.filter((el) => !el.createdInDb);\n      return {\n        ...state,\n        recipes: action.payload === \"All\" ? state.allRecipes : createdFilter,\n      };\n    case \"FILTERED_BY_DIETS\":\n      const allRecipes = state.allRecipes;\n      const dietFiltered =\n        action.payload === \"all\"\n          ? allRecipes\n          : allRecipes.filter((el) => \n\n           el.dieta.includes(action.apyload)||\n           el.dieta.map((e)=> e.name).includes(action.payload)   \n             /*\n              let diet = recipe.diets.map((d) => d.name);\n              if (diet.includes(action.payload)) {\n                return allRecipes;\n              }*/\n\n            );\n      return {\n        ...state,\n        recipes: dietFiltered,\n      };\n    case \"SEARCH_RECIPE\":\n      return {\n        ...state,\n        recipes: action.payload,\n      };\n\n    case \"POST_RECIPE\":\n      return {\n        ...state,\n      };\n    case \"ORDER_BY_SPOONACULAR_SCORE\":\n      const sortedRecipesSpoonScore =\n        action.payload === \"SpoonacularMax\"\n          ? state.allRecipes.sort(function (a, b) {\n              if (a.puntuacion < b.puntuacion) {\n                return 1;\n              }\n              if (b.puntuacion < a.puntuacion) {\n                return -1;\n              }\n              return 0;\n            })\n          : state.allRecipes.sort(function (a, b) {\n              if (a.puntuacion < b.puntuacion) {\n                return -1;\n              }\n              if (b.puntuacion < a.puntuacion) {\n                return 1;\n              }\n              return 0;\n            });\n      return {\n        ...state,\n        allRecipes: sortedRecipesSpoonScore,\n      };\n    case \"GET_DIETS_TYPES\":\n      return {\n        ...state,\n        diets: action.payload,\n        //allRecipes: action.payload,\n      };\n    case \"GET_DETAIL\":\n      return {\n        ...state,\n        detail: action.payload,\n      };\n    case \"ORDER_BY_TITLE\":\n      const sortedRecipesTitle =\n        action.payload === \"asc\"\n          ? state.allRecipes.sort(function (a, b) {\n              if (a.title.toLowerCase() > b.title.toLowerCase()) {\n                return 1;\n              }\n              if (b.title.toLowerCase() > a.title.toLowerCase()) {\n                return -1;\n              }\n              return 0;\n            })\n          : state.allRecipes.sort(function (a, b) {\n              if (a.title.toLowerCase() > b.title.toLowerCase()) {\n                return -1;\n              }\n              if (b.title.toLowerCase() > a.title.toLowerCase()) {\n                return 1;\n              }\n              return 0;\n            });\n      return {\n        ...state,\n        allRecipes: sortedRecipesTitle,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n\n\n\n    /*case \"FILTER_BY_STATUS\":\n      const allRecipes = state.allRecipes;\n      const statusFiltered =\n        action.payload === \"All\"\n          ? allRecipes\n          : allRecipes.filter((el) => el.status === action.payload);\n      return {\n        ...state,\n        recipes: statusFiltered, //solo modifica este estado\n      };*/"]},"metadata":{},"sourceType":"module"}